{"version":3,"sources":["components/landing/landing.jsx","redux/actions/actions.js","components/navBar/navBar.jsx","components/paginado/paginado.jsx","components/recipeCard/recipeCard.jsx","components/home/home.jsx","App.js","reportWebVitals.js","redux/reducer/reducer.js","redux/store/store.js","index.js"],"names":["LandingPage","className","to","GET_ALL_RECIPES","GET_ALL_DIETS","FILTER_RECIPE_DIETS","getAllRecipes","name","dispatch","fetch","then","res","json","data","type","payload","NavBar","useState","recipeState","setRecipeState","useDispatch","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","target","value","toLowerCase","Paginado","cardsPerPage","recipes","paginado","pageNumbers","i","Math","ceil","push","map","number","onClick","RecipeCard","img","diets","id","healthScore","height","src","alt","Home","props","state","visibility","healthScoreSort","alphabeticallySort","currentPage","indexOfLastCard","indexOfFirstCard","currentCards","bind","recipesShown","this","slice","setState","setTimeout","prevProps","prevState","console","log","length","getAllDiets","filterRecipeDiets","pageNumber","displayDiets","handleFilter","toggleMenu","style","changeSorts","r","image","React","Component","connect","App","Fragment","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","filter","recip","includes","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.568f609b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './landing.css';\r\n\r\n\r\nconst LandingPage = () => {\r\n\r\n    return (\r\n        <div className=\"landingPage\">\r\n\r\n            <Link to={`/home/`}>\r\n                <h1>HOME</h1>\r\n            </Link>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LandingPage;","\r\nexport const GET_ALL_RECIPES = 'GELL_ALL_RECIPES';\r\n\r\nexport const GET_ALL_DIETS = 'GET_ALL_DIETS';\r\n\r\nexport const FILTER_RECIPE_DIETS = 'FILTER_RECIPE_DIETS';\r\n\r\n\r\n\r\nexport const getAllRecipes = (name) => { \r\n    return function (dispatch) {\r\n        if (name) {\r\n            return fetch(`http://localhost:3001/recipes?name=${name}`)\r\n            .then(res => res.json())\r\n            .then(data => dispatch({ type: GET_ALL_RECIPES, payload: data }))}\r\n        else {\r\n        return fetch(\"http://localhost:3001/recipes\")\r\n        .then(res => res.json())\r\n        .then(data => dispatch({ type: GET_ALL_RECIPES, payload: data }))}\r\n    }\r\n};\r\n\r\n\r\nexport const getAllDiets = () => { \r\n    return function (dispatch) {\r\n        return fetch(\"http://localhost:3001/diets\")\r\n        .then(res => res.json())\r\n        .then(data => dispatch({ type: GET_ALL_DIETS, payload: data }))}\r\n    \r\n};\r\n\r\nexport const filterRecipeDiets = (payload) => { \r\n    return { type: FILTER_RECIPE_DIETS, payload: payload }\r\n};\r\n\r\n// export const getMovieDetail = (id) => { \r\n//     return function (dispatch) {\r\n//         return fetch(`http://localhost:3001/movies/${id}`)\r\n//         .then(res => res.json())\r\n//         .then(data => dispatch({ type: GET_MOVIE_DETAILS, payload: data}))\r\n//     }\r\n// };\r\n\r\n// let id = 5\r\n// export const createMovie = (payload) => {\r\n//     id++;\r\n//     return { type: CREATE_MOVIE, payload: {...payload, id: id} }\r\n// };\r\n\r\n\r\n// // Desde el componente ejecutamos la action creator, pasandole como argumento el id de la movie que queremos eliminar.\r\n// export const deleteMovie = (id) => { \r\n//     return { type: DELETE_MOVIE, payload: id} \r\n// };\r\n\r\n// // Desde el componente ejecutamos la action creator, pasandole como argumento los values que vamos a utilizar para enviar el form de contacto.\r\n// export const sendEmail = (payload) => {\r\n//     return { type: SEND_EMAIL, payload: payload}\r\n// };","import React, {useState} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getAllRecipes } from '../../redux/actions/actions';\r\n\r\n\r\nfunction NavBar() {\r\n\r\n    const [recipeState, setRecipeState] = useState({\r\n        name: ''\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function  handleSubmit(e){\r\n        e.preventDefault();\r\n        \r\n        dispatch(getAllRecipes(recipeState.name))\r\n\r\n    };\r\n\r\n    const handleInputChange = function (e) {\r\n        setRecipeState({\r\n            name: e.target.value.toLowerCase(),\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            <Link to=\"/home\"><p>Home</p></Link>\r\n\r\n            <Link to=\"/createRecipe\"><p>Crear receta</p></Link>\r\n\r\n            <h4>Buscador</h4>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label >Receta: </label>\r\n                    <input\r\n                    type=\"text\"\r\n                    placeholder='Nombre receta' \r\n                    autoComplete=\"off\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" >BUSCAR</button>\r\n            </form>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default NavBar;\r\n\r\n// disabled={Object.keys(errors).length}","import React from 'react'\r\n\r\n\r\nexport default function Paginado({cardsPerPage, recipes, paginado}) {\r\n    const pageNumbers = []\r\n\r\n\r\n    for (let i = 1; i <= Math.ceil(recipes/cardsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n\r\n    return (\r\n        <nav >\r\n            <ul className=\"paginado\">\r\n                {pageNumbers && pageNumbers.map (number =>{ \r\n                    return (\r\n                    <li className=\"paginadoPagina\" key={number}>\r\n                        <button onClick={ () => paginado(number)}> {number} </button>\r\n                    </li>\r\n                )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction RecipeCard({ name, img, diets, id, healthScore }) {\r\n    return (\r\n        <div >\r\n            <Link to={`/recipes/${id}`}><p>{name}</p></Link>\r\n            <p>{healthScore}</p>\r\n            <h4>\r\n                {diets.map( e => {\r\n                return `${e}, `})}\r\n            \r\n            </h4>\r\n            <img height=\"400px\" src={img} alt=\"imagen\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeCard","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllDiets, filterRecipeDiets, getAllRecipes } from \"../../redux/actions/actions\";\r\nimport NavBar from \"../navBar/navBar\";\r\nimport Paginado from \"../paginado/paginado\";\r\nimport RecipeCard from \"../recipeCard/recipeCard\";\r\nimport './home.css';\r\n\r\n\r\nexport class Home extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            diets: [],\r\n            visibility : false,\r\n            healthScoreSort : true,\r\n            alphabeticallySort : true,\r\n            currentPage : 1,\r\n            cardsPerPage : 6,\r\n            indexOfLastCard : \"\",\r\n            indexOfFirstCard : \"\",\r\n            currentCards : []\r\n        };\r\n        \r\n        this.paginado = this.paginado.bind(this);\r\n    };\r\n    \r\n    currentCards(){\r\n        let recipesShown= this.props.recipes.slice(this.state.indexOfFirstCard, this.state.indexOfLastCard)\r\n        this.setState({currentCards: recipesShown})\r\n    }\r\n\r\n    indexOfLastCard(){\r\n        this.setState({indexOfLastCard: (this.state.currentPage * this.state.cardsPerPage)})\r\n    }\r\n\r\n    indexOfFirstCard(){\r\n        this.setState({indexOfFirstCard: (this.state.indexOfLastCard - this.state.cardsPerPage)})\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.props.getAllRecipes();\r\n        this.indexOfLastCard();\r\n        setTimeout(() => {\r\n            this.indexOfFirstCard();\r\n            this.currentCards()\r\n        }, 100);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        console.log('Se actualizó el componente');\r\n\r\n        if (prevState.currentPage !== this.state.currentPage) {\r\n            this.indexOfLastCard();\r\n            setTimeout(() => {\r\n                this.indexOfFirstCard();\r\n                this.currentCards()\r\n            }, 100);\r\n\r\n        }\r\n\r\n        if (prevProps.recipes !== this.props.recipes) {\r\n            this.indexOfLastCard();\r\n            setTimeout(() => {\r\n                this.indexOfFirstCard();\r\n                this.currentCards()\r\n            }, 100);\r\n\r\n        }\r\n    }\r\n\r\n    // const [currentPage, setCurrentPage] = useState(1);\r\n    // const [cardsPerPage, setCardsPerPage] = useState(6);\r\n    \r\n    // const indexOfLastCard = currentPage * cardsPerPage;\r\n    // const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    // const currentCards = recipes.slice(indexOfFirstCard, indexOfLastCard);\r\n\r\n    \r\n    displayDiets(e) {\r\n        e.preventDefault();\r\n        \r\n        if (this.state.diets.length === 0){\r\n            \r\n            this.props.getAllDiets()\r\n            setTimeout( () => {\r\n                this.setState({diets : this.props.diets})\r\n            }, 400);\r\n            \r\n        } \r\n        \r\n        if (this.state.diets.length > 0) {\r\n            this.setState({diets : []})\r\n        }\r\n        \r\n    };\r\n    \r\n    handleFilter(e, name) {\r\n        e.preventDefault();\r\n        \r\n        this.props.getAllRecipes();\r\n        \r\n        setTimeout( () => {  \r\n            this.props.filterRecipeDiets(name);;\r\n        }, 100);\r\n        \r\n    };\r\n\r\n    \r\n    toggleMenu() {\r\n        this.setState({visibility: !this.state.visibility})\r\n    }\r\n\r\n    changeSorts(e) {\r\n        switch (e.target.value) {\r\n            case 'alphaUp':\r\n                this.setState({alphabeticallySort: true})\r\n                break;\r\n                //Statements executed when the\r\n                //result of expression matches value1\r\n                \r\n            case 'alphaDown':\r\n                this.setState({alphabeticallySort: false})\r\n                break;\r\n                //Statements executed when the\r\n                //result of expression matches value2\r\n                \r\n                \r\n            case 'hScoreUp':\r\n                this.setState({healthScoreSort: true})\r\n                break;\r\n                //Statements executed when the\r\n                //result of expression matches valueN\r\n                \r\n            case 'hScoreDown':\r\n                this.setState({healthScoreSort: false})\r\n                break;\r\n            \r\n            default:\r\n                console.log(\"No se realizaron cambios\");\r\n        }\r\n            \r\n    }\r\n\r\n\r\n    paginado(pageNumber) {\r\n        this.setState({currentPage: pageNumber})\r\n    }\r\n    \r\n\r\n    \r\n                        \r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar/>\r\n\r\n                <button onClick={(e) => this.displayDiets(e)}>Tipo de dieta</button>\r\n                <select>\r\n                    {this.state.diets.map(diets =>\r\n                        <option key={diets.id} onClick={(e) => this.handleFilter(e, diets.name)}>\r\n                            {diets.name}\r\n                        </option>\r\n                    )}\r\n                </select> \r\n\r\n                <button onClick={() => this.toggleMenu()}>Ordenar</button>\r\n                <ul  style={{\"display\": this.state.visibility ? 'inline' : 'none', \"listStyleType\": \"none\"}}>\r\n                    <li> Por nombre </li>\r\n                        <select name='alphabetically'>\r\n                            <option value=\"alphaUp\" onClick={(e) => this.changeSorts(e)}>Ascendiente</option>\r\n                            <option value=\"alphaDown\" onClick={(e) => this.changeSorts(e)}>Descendiente</option>\r\n                        </select>\r\n                    <li> Por Health Score </li>\r\n                        <select name='healthScore'>\r\n                            <option value=\"hScoreUp\" onClick={(e) => this.changeSorts(e)}>Ascendiente</option>\r\n                            <option value=\"hScoreDown\" onClick={(e) => this.changeSorts(e)}>Descendiente</option>\r\n                        </select>\r\n                </ul>\r\n\r\n                <div>\r\n                {(this.state.currentCards).map(r => {\r\n                    return <RecipeCard\r\n                        key={r.name}\r\n                        name={r.name}\r\n                        diets={r.diets}\r\n                        img={r.image}\r\n                        id={r.id}\r\n                        healthScore={r.healthScore}\r\n                    />\r\n                })}\r\n                </div>\r\n\r\n                <Paginado cardsPerPage={this.state.cardsPerPage} recipes={this.props.recipes.length} paginado={this.paginado}/>\r\n\r\n            \r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        diets: state.diets,\r\n        recipes: state.recipes\r\n    };\r\n}\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n    //     return {\r\n        //         getAllDiets: () => dispatch(getAllDiets()),\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps, {getAllDiets, filterRecipeDiets, getAllRecipes})(Home);","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport LandingPage from './components/landing/landing';\nimport Home from './components/home/home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n\n      <React.Fragment>\n\n        <Route exact path=\"/\" component={LandingPage} />\n\n        <Route exact path=\"/home\" component={Home} />\n{/* \n\n        <Route path=\"/movie/:id\" prop component={MovieDetail} />\n\n          <Route path=\"/movies/create\" component={CreateMovie} /> */}\n        \n      </React.Fragment>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FILTER_RECIPE_DIETS, GET_ALL_DIETS, GET_ALL_RECIPES } from \"../actions/actions\";\r\n\r\n\r\nconst initialState = {\r\n    recipes: [],\r\n    diets: [],\r\n    // recipeDetail: {},\r\n    // newRecipe: {},\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_ALL_RECIPES:\r\n            return {\r\n            ...state,\r\n            recipes: action.payload\r\n        }\r\n\r\n        case GET_ALL_DIETS:\r\n            return {\r\n            ...state,\r\n            diets: action.payload,\r\n        }\r\n\r\n        case FILTER_RECIPE_DIETS:\r\n            return {\r\n            ...state,\r\n            recipes: state.recipes.filter(recip => recip.diets.includes(action.payload))\r\n        }\r\n\r\n        \r\n\r\n        // case DELETE_MOVIE:\r\n        //     return {\r\n        //     ...state,\r\n        //     movies: state.movies.filter(film => film.id !== action.payload)\r\n        // }\r\n    \r\n        // case SEND_EMAIL:\r\n        //     return {\r\n        //     ...state,\r\n        //     email: action.payload\r\n        // }\r\n\r\n        default:\r\n            return { \r\n            ...state \r\n        } \r\n    }\r\n};\r\n\r\n\r\nexport default rootReducer;","import { configureStore } from '@reduxjs/toolkit'\r\nimport rootReducer from '../reducer/reducer.js';\r\n\r\nlet store = configureStore({\r\n    reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store.js';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}